<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.somnus</groupId>
	<artifactId>Somnus</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>

	<name>Somnus</name>
	<url>http://maven.apache.org</url>
	<description>Struts2.3.x+Spring3.2.x+Hibernate4.2.x+CXF2.7.x+ExtJs4.2+Maven架构的示例项目</description>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git@github.com:love-somnus/Somnus.git</connection>
		<developerConnection>scm:git:git@github.com:love-somnus/Somnus.git</developerConnection>
		<url>git@github.com:love-somnus/Somnus.git</url>
	</scm>
	<developers>
		<developer>
			<id>Somnus</id>
			<name>Somnus</name>
			<email>928200207@qq.com</email>
		</developer>
	</developers>

	<properties>
		<!-- 指明使用JDK7 -->
		<java-version>1.7</java-version>
		<!-- 指明使用utf-8编码 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- log -->
		<slf4j.version>1.7.2</slf4j.version>
		<logback.version>1.0.6</logback.version>
	</properties>

	<!-- 指定Maven仓库 -->
	<repositories>
		<!-- oschina的maven仓库 -->
		<repository>
			<id>oschinaRepository</id>
			<name>local private nexus</name>
			<url>http://maven.oschina.net/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

		<!-- 官方maven仓库 -->
		<!-- <repository> <id>maven</id> <name>Maven Repository Switchboard</name> 
			<layout>default</layout> <url>http://repo1.maven.org/maven2</url> <snapshots> 
			<enabled>true</enabled> </snapshots> </repository> -->
	</repositories>

	<!-- 指定maven plugin仓库 -->
	<pluginRepositories>
		<!-- oschina的maven plugin仓库 -->
		<pluginRepository>
			<id>oschinaPluginRepository</id>
			<name>local private nexus</name>
			<url>http://maven.oschina.net/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<!-- maven依赖包的书写是有顺序的，请不要更改下面dependency的顺序，避免造成JAR包冲突 -->
	<dependencies>

		<!-- 加入mysql驱动依赖包 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.27</version>
		</dependency>
		<!-- sql server数据库驱动 -->
		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
			<version>1.3.1</version>
		</dependency>
		<!-- oracle数据库驱动，如果没有使用oracle数据库，请把这个引用注释掉 -->
		<!-- oracle驱动特殊，他是商业驱动，官方maven版本库中是不存在jar包的，所以需要使用下面命令添加到你本地的maven库中 -->
		<!-- 在CMD中执行下面语句(前提是你配置好了JAVA和MAVEN环境变量) -->
		<!-- mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc6 
			-Dversion=11.2.0 -Dpackaging=jar -Dfile=D:\pf\oracle\product\11.2.0\dbhome_1\jdbc\lib\ojdbc6.jar -->
		<!-- DartifactId的值改为artifactId的值 -->
		<!-- Dversion的值改为version的值 -->
		<!-- Dfile的值指定到你硬盘上的oracle驱动的绝对位置 -->
		<!-- <dependency> <groupId>com.oracle</groupId> <artifactId>ojdbc6</artifactId> 
			<version>11.2.0</version> </dependency> -->

		<!-- 加入junit依赖包 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<!-- 加入druid数据源依赖包 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.7.4</version>
		</dependency>

		<!-- 加入fastjson依赖包 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.1.37</version>
		</dependency>

		<!--******** logback and slf4j ******** -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!--**************** logback and slf4j **************** -->

		<!-- 这个包用于显示真实执行的sql -->
		<dependency>
			<groupId>com.googlecode.log4jdbc</groupId>
			<artifactId>log4jdbc</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- 加入dom4j依赖包 -->
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
			<version>1.1.4</version>
		</dependency>

		<!-- 加入jstl依赖包 -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2.1-b03</version>
			<scope>provided</scope>
		</dependency>
		<!-- servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

		<!-- io包 -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<!-- 加入fileupload依赖包 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3</version>
		</dependency>

		<!-- 加入POI核心依赖 -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.10-beta2</version>
		</dependency>
		<!-- 为POI支持Office Open XML -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.10-beta2</version>
		</dependency>
		<!-- 支持Word文档的操作 -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-scratchpad</artifactId>
			<version>3.10-beta2</version>
		</dependency>
		
		<!--###################### captcha ###################### -->
		<dependency>
			<groupId>com.octo.captcha</groupId>
			<artifactId>jcaptcha-all</artifactId>
			<version>1.0-RC6</version>
			<exclusions>
				<exclusion>
					<artifactId>ehcache</artifactId>
					<groupId>net.sf.ehcache</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>quartz</artifactId>
					<groupId>quartz</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
				<exclusion>
					<artifactId>hsqldb</artifactId>
					<groupId>hsqldb</groupId>
				</exclusion>
				<exclusion>
					<artifactId>xmlParserAPIs</artifactId>
					<groupId>xerces</groupId>
				</exclusion>
				<exclusion>
					<artifactId>xercesImpl</artifactId>
					<groupId>xerces</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- dbutils依赖包 -->
		<dependency>
			<groupId>commons-dbutils</groupId>
			<artifactId>commons-dbutils</artifactId>
			<version>1.5</version>
		</dependency>

		<!-- 加入javamelody依赖包 -->
		<dependency>
			<groupId>net.bull.javamelody</groupId>
			<artifactId>javamelody-core</artifactId>
			<version>1.47.0</version>
		</dependency>

		<!-- 加入batik依赖包，用于highcharts导出图表 -->
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-codec</artifactId>
			<version>1.7</version>
		</dependency>

		<!-- 加入CXF依赖包 -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>2.7.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>2.7.7</version>
		</dependency>

		<!-- 加入quartz依赖包 -->
		<dependency>
			<groupId>org.opensymphony.quartz</groupId>
			<artifactId>quartz-all</artifactId>
			<version>1.6.1</version>
		</dependency>

		<!-- 加入sftp依赖包 -->
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.51</version>
		</dependency>

		<!-- 加入spring mvc依赖包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>3.2.5.RELEASE</version>
		</dependency>
		<!-- 加入orm依赖包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>3.2.5.RELEASE</version>
		</dependency>
		<!-- 加入spring测试依赖包 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.2.5.RELEASE</version>
		</dependency>

		<!-- ehcache需要的依赖 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>3.2.5.RELEASE</version>
		</dependency>
		<!-- 加入ehcache -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>2.7.4</version>
		</dependency>

		<!-- 加入hibernate依赖包 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.2.7.SP1</version>
		</dependency>

		<!-- 加入struts2依赖包 -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-core</artifactId>
			<version>2.3.15.3</version>
			<exclusions>
				<!-- 由于hibernate里面已经包含了javassist包，跟struts2的javassist冲突，所以struts2要排除这个引用 -->
				<exclusion>
					<groupId>javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- struts2整合spring插件 -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-spring-plugin</artifactId>
			<version>2.3.15.3</version>
		</dependency>
		<!-- struts2注解插件 -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-convention-plugin</artifactId>
			<version>2.3.15.3</version>
		</dependency>
		<!-- struts2-json插件 -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-json-plugin</artifactId>
			<version>2.3.15</version>
		</dependency>
		<!-- 可以看到struts2应用里的Action等各种资源的影射情况 -->
		<!-- 可以使用类似http://localhost:9999/Somnus/config-browser/showConstants.action的url来访问 -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-config-browser-plugin</artifactId>
			<version>2.3.15.3</version>
		</dependency>
		
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>
		
		<!--###################### jdbcdslog ###################### -->
        <dependency>
            <groupId>com.googlecode.usc</groupId>
            <artifactId>jdbcdslog</artifactId>
            <version>1.0.6.2</version>
        </dependency>

	</dependencies>

	<build>
		<finalName>Somnus</finalName>
		
		<plugins>
			<!-- 编译的时候使用JDK7和UTF8编码 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- 打war包插件  -->
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
					<packagingExcludes>
                        WEB-INF/classes/logback-test.xml
                    </packagingExcludes>
					<webXml>${basedir}/src/main/webapp/WEB-INF/web.xml</webXml>
					<webResources>
						<resource>
							<!-- 元配置文件的目录，相对于pom.xml文件的路径 -->
							<directory>${basedir}/src/main/webapp/WEB-INF</directory>
							<!-- 是否过滤文件，也就是是否启动auto-config的功能 -->
							<filtering>true</filtering>
							<!-- 不包括以下文件夹下的文件 -->
							<!-- <excludes>
								<exclude>template/**</exclude>
							</excludes> -->
							<targetPath>WEB-INF</targetPath>
						</resource>  
					</webResources>  
				</configuration>
            </plugin>

			<!-- 配置Maven插件(mvn jetty:run可以运行项目) -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.9.v20130131</version>
				<configuration>
					<webAppConfig>
						<contextPath>/${project.build.finalName}</contextPath>
					</webAppConfig>
					<httpConnector>
						<port>8081</port>
					</httpConnector>
					<scanIntervalSeconds>2</scanIntervalSeconds>
					<stopKey>shutdown</stopKey>
					<stopPort>9966</stopPort>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/${project.build.finalName}</path>
					<port>8080</port>
					<uriEncoding>UTF-8</uriEncoding>
					<finalName>${project.build.finalName}</finalName>
					<server>tomcat7</server>
				</configuration>
				<!-- <executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions> -->
			</plugin>

		</plugins>
	</build>
	
	<profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <profiles.active>dev</profiles.active>
            </properties>
        </profile>
        <profile>
            <id>sit</id>
            <properties>
                <profiles.active>sit</profiles.active>
            </properties>
        </profile>
        <profile>
            <id>prd</id>
            <properties>
                <profiles.active>prd</profiles.active>
            </properties>
        </profile>
    </profiles>
</project>
